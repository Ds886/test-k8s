#!/bin/sh
set -eux
CURR_ID=$(id -u)
[ "${CURR_ID}" != "0" ] && echo err: must run as root && exit 1

export PATH="$PATH:/usr/local/bin"
set +ue
# Path
PATH_TEMP="$(mktemp -d)"

#BIN
KUBECTL="$(which kubectl)"
[ -z "${KUBECTL}" ] && echo err: no kubectl && exit 1
set -e

KPACK_VER="0.13.2"
KP_VER="0.13.0"
KP_HASH="52f0c927a1350f4f1bb281575ec246f406fb96aa69dc974ed10a2fe52c538158"
set -u


set +e
"${KUBECTL}" get node
KUBE_EXIT_CODE="$?"
[ "$KUBE_EXIT_CODE" != 0 ] && echo err: no valid kubectl config && exit 1
set -e

# https://github.com/buildpacks-community/kpack/releases/download/v0.13.2/release-0.13.2.yaml
curl -Lo "${PATH_TEMP}/kpack-release-${KPACK_VER}.yaml" "https://github.com/buildpacks-community/kpack/releases/download/v${KPACK_VER}/release-${KPACK_VER}.yaml"

# https://github.com/buildpacks-community/kpack-cli/releases/download/v0.13.0/kp-linux-amd64-0.13.0
curl -Lo "/usr/local/bin/kp" "https://github.com/buildpacks-community/kpack-cli/releases/download/v${KP_VER}/kp-linux-amd64-${KP_VER}"
chmod +x "/usr/local/bin/kp"
CURR_DL_SUM=$(sha256sum "/usr/local/bin/kp"| cut -f1 -d\ )
[ "${CURR_DL_SUM}" != "${KP_HASH}" ] && echo err: download corrupted  && exit 1

"${KUBECTL}" apply -f "${PATH_TEMP}/kpack-release-${KPACK_VER}.yaml"
kp version
KP_EXIT_CODE="$?"
[ "${KP_EXIT_CODE}" != 0 ] && echo "err: kp have a runtime issue" && exit 1
